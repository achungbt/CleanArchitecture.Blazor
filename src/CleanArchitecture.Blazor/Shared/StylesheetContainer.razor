@inject AppState AppState
@implements IDisposable

@if (AppState.IsDarkMode)
{
    <link href="_content/DevExpress.Blazor.Themes/blazing-dark.bs5.css" rel="stylesheet" />
}
else
{
    <link href="_content/DevExpress.Blazor.Themes/blazing-berry.bs5.min.css" rel="stylesheet" />
}

<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
<link href="css/site.css" rel="stylesheet"/>
<link href="CleanArchitecture.Blazor.styles.css" rel="stylesheet"/>

@code {
   
    protected override void OnInitialized()
    {
        AppState.OnChange += OnChangeHandler;
    }
    public void Dispose()
    {
        AppState.OnChange -= OnChangeHandler;
    }
    private async void OnChangeHandler()
    {
        await InvokeAsync(StateHasChanged);
    }
}